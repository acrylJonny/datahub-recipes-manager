# Generated by Django 5.2.2 on 2025-06-16 23:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Environment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Environments",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EnvVarsTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("tags", models.TextField(blank=True, null=True)),
                (
                    "recipe_type",
                    models.CharField(
                        choices=[
                            ("bigquery", "Google BigQuery"),
                            ("file", "File"),
                            ("s3", "Amazon S3"),
                            ("snowflake", "Snowflake"),
                            ("postgres", "PostgreSQL"),
                            ("mysql", "MySQL"),
                            ("mssql", "Microsoft SQL Server"),
                            ("oracle", "Oracle"),
                            ("dbt", "dbt"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("variables", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="GitHubPR",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipe_id", models.CharField(max_length=255)),
                ("pr_url", models.URLField()),
                ("pr_number", models.IntegerField()),
                (
                    "pr_status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("merged", "Merged"),
                            ("closed", "Closed"),
                            ("pending", "Pending"),
                        ],
                        default="open",
                        max_length=50,
                    ),
                ),
                ("branch_name", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "GitHub Pull Request",
                "verbose_name_plural": "GitHub Pull Requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GitSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("github", "GitHub"),
                            ("azure_devops", "Azure DevOps"),
                            ("gitlab", "GitLab"),
                            ("bitbucket", "Bitbucket"),
                            ("other", "Other Git Provider"),
                        ],
                        default="github",
                        help_text="Git provider type",
                        max_length=50,
                    ),
                ),
                (
                    "base_url",
                    models.URLField(
                        blank=True,
                        help_text="Base API URL (leave empty for GitHub.com, required for Azure DevOps or self-hosted instances)",
                        null=True,
                    ),
                ),
                (
                    "token",
                    models.CharField(help_text="Personal Access Token", max_length=255),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username, organization, or project name",
                        max_length=100,
                    ),
                ),
                (
                    "repository",
                    models.CharField(help_text="Repository name", max_length=100),
                ),
                (
                    "current_branch",
                    models.CharField(
                        default="main",
                        help_text="Current branch for Git operations",
                        max_length=255,
                    ),
                ),
                ("enabled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Git Settings",
                "verbose_name_plural": "Git Settings",
            },
        ),
        migrations.CreateModel(
            name="LogEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=10,
                    ),
                ),
                ("source", models.TextField(default="application")),
                ("message", models.TextField()),
                ("details", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Log Entries",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Mutation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "platform_instance",
                    models.CharField(
                        help_text="Platform instance identifier", max_length=255
                    ),
                ),
                (
                    "env",
                    models.CharField(
                        help_text="Environment identifier", max_length=255
                    ),
                ),
                (
                    "custom_properties",
                    models.JSONField(
                        default=dict, help_text="Custom properties as JSON"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Mutations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PolicyTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("policy_type", models.CharField(max_length=50)),
                ("state", models.CharField(default="ACTIVE", max_length=20)),
                ("content", models.TextField()),
                ("resources", models.TextField(blank=True, null=True)),
                ("privileges", models.TextField(blank=True, null=True)),
                ("actors", models.TextField(blank=True, null=True)),
                ("deployed", models.BooleanField(default=False)),
                ("deployed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "datahub_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PullRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipe_id", models.CharField(max_length=255)),
                ("pr_number", models.IntegerField()),
                ("pr_url", models.URLField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("merged", "Merged"),
                            ("draft", "Draft"),
                        ],
                        default="open",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("branch_name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="RecipeTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("recipe_type", models.CharField(max_length=50)),
                ("content", models.TextField()),
                ("is_favorite", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("tags", models.CharField(blank=True, max_length=255, null=True)),
                ("deployed", models.BooleanField(default=False)),
                ("deployed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "datahub_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("executor_id", models.CharField(default="default", max_length=255)),
                (
                    "cron_schedule",
                    models.CharField(default="0 0 * * *", max_length=100),
                ),
                ("timezone", models.CharField(default="Etc/UTC", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255, unique=True)),
                ("value", models.TextField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Settings",
            },
        ),
        migrations.CreateModel(
            name="EnvVarsInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("recipe_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "recipe_type",
                    models.CharField(
                        choices=[
                            ("bigquery", "Google BigQuery"),
                            ("file", "File"),
                            ("s3", "Amazon S3"),
                            ("snowflake", "Snowflake"),
                            ("postgres", "PostgreSQL"),
                            ("mysql", "MySQL"),
                            ("mssql", "Microsoft SQL Server"),
                            ("oracle", "Oracle"),
                            ("dbt", "dbt"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("variables", models.TextField()),
                ("deployed", models.BooleanField(default=False)),
                ("deployed_at", models.DateTimeField(blank=True, null=True)),
                ("datahub_secrets_created", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="env_vars_instances",
                        to="web_ui.environment",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="web_ui.envvarstemplate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EnvironmentInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "recipe_type",
                    models.CharField(
                        choices=[
                            ("postgres", "PostgreSQL"),
                            ("mysql", "MySQL"),
                            ("mssql", "Microsoft SQL Server"),
                            ("snowflake", "Snowflake"),
                            ("bigquery", "BigQuery"),
                            ("redshift", "Redshift"),
                            ("databricks", "Databricks"),
                        ],
                        max_length=50,
                    ),
                ),
                ("tenant", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instances",
                        to="web_ui.envvarstemplate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GitSecrets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "environment",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_configured", models.BooleanField(default=True)),
                ("last_checked", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "GitHub Secret",
                "verbose_name_plural": "GitHub Secrets",
                "ordering": ["environment", "name"],
                "unique_together": {("name", "environment")},
            },
        ),
        migrations.AddField(
            model_name="environment",
            name="mutations",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="environments",
                to="web_ui.mutation",
            ),
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("METADATA", "Metadata"), ("PLATFORM", "Platform")],
                        max_length=50,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("INACTIVE", "Inactive")],
                        max_length=50,
                    ),
                ),
                ("resources", models.TextField()),
                ("privileges", models.TextField()),
                ("actors", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="policies",
                        to="web_ui.environment",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Policies",
            },
        ),
        migrations.CreateModel(
            name="RecipeSecret",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipe_id", models.CharField(max_length=255)),
                ("variable_name", models.CharField(max_length=255)),
                ("value", models.TextField(blank=True, null=True)),
                ("encrypted_value", models.TextField(blank=True, null=True)),
                ("is_secret", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Recipe Secret",
                "verbose_name_plural": "Recipe Secrets",
                "unique_together": {("recipe_id", "variable_name")},
            },
        ),
        migrations.CreateModel(
            name="RecipeInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "datahub_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deployed", models.BooleanField(default=False)),
                ("deployed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cron_schedule",
                    models.CharField(default="0 0 * * *", max_length=100),
                ),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("debug_mode", models.BooleanField(default=False)),
                (
                    "env_vars_instance",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recipes",
                        to="web_ui.envvarsinstance",
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recipe_instances",
                        to="web_ui.environment",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="web_ui.recipetemplate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataHubClientInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_id",
                    models.CharField(
                        help_text="DataHub client ID", max_length=255, unique=True
                    ),
                ),
                (
                    "server_id",
                    models.CharField(
                        blank=True,
                        help_text="DataHub server ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "frontend_base_url",
                    models.URLField(
                        blank=True, help_text="DataHub frontend base URL", null=True
                    ),
                ),
                (
                    "server_config",
                    models.JSONField(
                        default=dict, help_text="Raw server configuration as JSON"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("last_connection_test", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_status",
                    models.CharField(
                        choices=[
                            ("connected", "Connected"),
                            ("failed", "Failed"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Last error message if connection failed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "environment",
                    models.ForeignKey(
                        help_text="Environment this client info belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datahub_client_info",
                        to="web_ui.environment",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "DataHub Client Info",
                "ordering": ["-last_updated"],
                "unique_together": {("client_id", "environment")},
            },
        ),
    ]
