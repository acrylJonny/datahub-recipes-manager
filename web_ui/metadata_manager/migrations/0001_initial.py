# Generated by Django 5.2.2 on 2025-06-16 23:02

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Assertion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("assertion_type", models.CharField(default="UNKNOWN", max_length=50)),
                ("entity_urn", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "platform_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("external_url", models.URLField(blank=True, null=True)),
                ("removed", models.BooleanField(default=False)),
                (
                    "info_data",
                    models.JSONField(
                        blank=True,
                        help_text="Complete info structure from DataHub",
                        null=True,
                    ),
                ),
                ("ownership_data", models.JSONField(blank=True, null=True)),
                ("owners_count", models.IntegerField(default=0)),
                ("relationships_data", models.JSONField(blank=True, null=True)),
                ("relationships_count", models.IntegerField(default=0)),
                ("run_events_data", models.JSONField(blank=True, null=True)),
                ("tags_data", models.JSONField(blank=True, null=True)),
                ("monitor_data", models.JSONField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("config", models.JSONField(blank=True, null=True)),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("last_status", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "verbose_name": "Assertion",
                "verbose_name_plural": "Assertions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataHubGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("urn", models.CharField(max_length=500, unique=True)),
                ("display_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "DataHub Group",
                "verbose_name_plural": "DataHub Groups",
                "ordering": ["display_name"],
            },
        ),
        migrations.CreateModel(
            name="DataHubOwnershipType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("urn", models.CharField(max_length=500, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "DataHub Ownership Type",
                "verbose_name_plural": "DataHub Ownership Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataHubUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("urn", models.CharField(max_length=500, unique=True)),
                ("username", models.CharField(max_length=255)),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "DataHub User",
                "verbose_name_plural": "DataHub Users",
                "ordering": ["username"],
            },
        ),
        migrations.CreateModel(
            name="DataProduct",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("external_url", models.URLField(blank=True, null=True)),
                (
                    "entity_urns",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of entity URNs that belong to this data product",
                    ),
                ),
                ("domain_urn", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "platform_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("removed", models.BooleanField(default=False)),
                (
                    "properties_data",
                    models.JSONField(
                        blank=True,
                        help_text="Complete properties structure from DataHub",
                        null=True,
                    ),
                ),
                ("ownership_data", models.JSONField(blank=True, null=True)),
                ("owners_count", models.IntegerField(default=0)),
                ("relationships_data", models.JSONField(blank=True, null=True)),
                ("relationships_count", models.IntegerField(default=0)),
                ("entities_data", models.JSONField(blank=True, null=True)),
                ("entities_count", models.IntegerField(default=0)),
                ("tags_data", models.JSONField(blank=True, null=True)),
                ("glossary_terms_data", models.JSONField(blank=True, null=True)),
                ("structured_properties_data", models.JSONField(blank=True, null=True)),
                ("institutional_memory_data", models.JSONField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Data Product",
                "verbose_name_plural": "Data Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Environment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_default", models.BooleanField(default=False)),
                ("datahub_url", models.URLField(blank=True)),
                ("datahub_token", models.CharField(blank=True, max_length=255)),
                ("git_branch", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-is_default", "name"],
            },
        ),
        migrations.CreateModel(
            name="SyncConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("source_environment", models.CharField(max_length=50)),
                ("target_environment", models.CharField(max_length=50)),
                ("entity_types", models.JSONField()),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("last_status", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Sync Configuration",
                "verbose_name_plural": "Sync Configurations",
            },
        ),
        migrations.CreateModel(
            name="AssertionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("run_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("status", models.CharField(max_length=20)),
                ("details", models.JSONField(blank=True, null=True)),
                (
                    "assertion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="metadata_manager.assertion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assertion Result",
                "verbose_name_plural": "Assertion Results",
            },
        ),
        migrations.CreateModel(
            name="DataProductResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deployed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("status", models.CharField(max_length=20)),
                ("details", models.JSONField(blank=True, null=True)),
                (
                    "data_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deployment_results",
                        to="metadata_manager.dataproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Product Result",
                "verbose_name_plural": "Data Product Results",
                "ordering": ["-deployed_at"],
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent_domain_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "color_hex",
                    models.CharField(
                        blank=True,
                        help_text="Color in hex format (e.g. #FF5733)",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("icon_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "icon_style",
                    models.CharField(
                        blank=True, default="solid", max_length=50, null=True
                    ),
                ),
                (
                    "icon_library",
                    models.CharField(
                        blank=True, default="font-awesome", max_length=50, null=True
                    ),
                ),
                ("owners_count", models.IntegerField(default=0)),
                ("relationships_count", models.IntegerField(default=0)),
                ("entities_count", models.IntegerField(default=0)),
                ("raw_data", models.JSONField(blank=True, null=True)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Domain",
                "verbose_name_plural": "Domains",
            },
        ),
        migrations.AddField(
            model_name="dataproduct",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.AddField(
            model_name="assertion",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.CreateModel(
            name="GlossaryNode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "color_hex",
                    models.CharField(
                        blank=True,
                        help_text="Color in hex format (e.g. #FF5733)",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="metadata_manager.glossarynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Glossary Node",
                "verbose_name_plural": "Glossary Nodes",
            },
        ),
        migrations.CreateModel(
            name="GlossaryTerm",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("domain_urn", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "term_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
                (
                    "parent_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terms",
                        to="metadata_manager.glossarynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Glossary Term",
                "verbose_name_plural": "Glossary Terms",
            },
        ),
        migrations.CreateModel(
            name="SearchProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                ("cache_key", models.CharField(db_index=True, max_length=255)),
                ("current_step", models.CharField(max_length=200)),
                ("current_entity_type", models.CharField(blank=True, max_length=50)),
                ("current_platform", models.CharField(blank=True, max_length=100)),
                ("total_combinations", models.IntegerField(default=0)),
                ("completed_combinations", models.IntegerField(default=0)),
                ("total_results_found", models.IntegerField(default=0)),
                ("is_complete", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["session_key", "cache_key"],
                        name="metadata_ma_session_809dc0_idx",
                    ),
                    models.Index(
                        fields=["updated_at"], name="metadata_ma_updated_e7aef3_idx"
                    ),
                ],
                "unique_together": {("session_key", "cache_key")},
            },
        ),
        migrations.CreateModel(
            name="SearchResultCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                ("cache_key", models.CharField(db_index=True, max_length=255)),
                ("entity_urn", models.CharField(db_index=True, max_length=500)),
                ("entity_data", models.JSONField()),
                ("search_params", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["session_key", "cache_key"],
                        name="metadata_ma_session_d62627_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="metadata_ma_created_732597_idx"
                    ),
                ],
                "unique_together": {("session_key", "cache_key", "entity_urn")},
            },
        ),
        migrations.CreateModel(
            name="StructuredProperty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("qualified_name", models.CharField(max_length=255, unique=True)),
                ("value_type", models.CharField(default="STRING", max_length=50)),
                ("cardinality", models.CharField(default="SINGLE", max_length=50)),
                ("immutable", models.BooleanField(default=False)),
                ("entity_types", models.JSONField(default=list)),
                (
                    "allowed_values",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("show_in_search_filters", models.BooleanField(default=True)),
                ("show_as_asset_badge", models.BooleanField(default=True)),
                ("show_in_asset_summary", models.BooleanField(default=True)),
                ("show_in_columns_table", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Structured Property",
                "verbose_name_plural": "Structured Properties",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "color",
                    models.CharField(
                        blank=True, default="#0d6efd", max_length=20, null=True
                    ),
                ),
                ("ownership_data", models.JSONField(blank=True, null=True)),
                ("owners_count", models.IntegerField(default=0)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("NOT_SYNCED", "Not Synced"),
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "definition_json",
                    models.JSONField(
                        blank=True,
                        help_text="Test definition in JSON format",
                        null=True,
                    ),
                ),
                (
                    "yaml_definition",
                    models.TextField(
                        blank=True,
                        help_text="Test definition in YAML format",
                        null=True,
                    ),
                ),
                (
                    "results_data",
                    models.JSONField(
                        blank=True, help_text="Test execution results", null=True
                    ),
                ),
                ("passing_count", models.IntegerField(default=0)),
                ("failing_count", models.IntegerField(default=0)),
                (
                    "last_run_timestamp",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Last run timestamp in milliseconds",
                        null=True,
                    ),
                ),
                ("removed", models.BooleanField(default=False)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test",
                "verbose_name_plural": "Tests",
                "ordering": ["name"],
            },
        ),
    ]
