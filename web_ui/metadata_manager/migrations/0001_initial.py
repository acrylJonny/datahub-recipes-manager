# Generated by Django 5.2 on 2025-05-19 19:57

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Assertion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("type", models.CharField(max_length=50)),
                ("config", models.JSONField()),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("last_status", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Assertion",
                "verbose_name_plural": "Assertions",
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deterministic_urn", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Domain",
                "verbose_name_plural": "Domains",
            },
        ),
        migrations.CreateModel(
            name="SyncConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("source_environment", models.CharField(max_length=50)),
                ("target_environment", models.CharField(max_length=50)),
                ("entity_types", models.JSONField()),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("last_status", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Sync Configuration",
                "verbose_name_plural": "Sync Configurations",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deterministic_urn", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("color", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
            },
        ),
        migrations.CreateModel(
            name="AssertionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("run_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("status", models.CharField(max_length=20)),
                ("details", models.JSONField(blank=True, null=True)),
                (
                    "assertion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="metadata_manager.assertion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assertion Result",
                "verbose_name_plural": "Assertion Results",
            },
        ),
        migrations.CreateModel(
            name="GlossaryNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deterministic_urn", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="metadata_manager.glossarynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Glossary Node",
                "verbose_name_plural": "Glossary Nodes",
            },
        ),
        migrations.CreateModel(
            name="GlossaryTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "original_urn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deterministic_urn", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "term_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "parent_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terms",
                        to="metadata_manager.glossarynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Glossary Term",
                "verbose_name_plural": "Glossary Terms",
            },
        ),
    ]
