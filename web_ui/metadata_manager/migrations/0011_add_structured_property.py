# Generated by Django 5.2.1 on 2025-06-02 16:06

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("metadata_manager", "0010_merge_20250602_1606"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="domain",
            name="staged_for_git",
        ),
        migrations.RemoveField(
            model_name="glossarynode",
            name="staged_for_git",
        ),
        migrations.RemoveField(
            model_name="glossaryterm",
            name="staged_for_git",
        ),
        migrations.RemoveField(
            model_name="tag",
            name="staged_for_git",
        ),
        migrations.AddField(
            model_name="glossarynode",
            name="color_hex",
            field=models.CharField(
                blank=True,
                help_text="Color in hex format (e.g. #FF5733)",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="domain",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.AlterField(
            model_name="domain",
            name="sync_status",
            field=models.CharField(
                choices=[
                    ("SYNCED", "Synced"),
                    ("LOCAL_ONLY", "Local Only"),
                    ("REMOTE_ONLY", "Remote Only"),
                    ("MODIFIED", "Modified"),
                    ("PENDING_PUSH", "Pending Push"),
                ],
                default="NOT_SYNCED",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="glossarynode",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.AlterField(
            model_name="glossarynode",
            name="sync_status",
            field=models.CharField(
                choices=[
                    ("SYNCED", "Synced"),
                    ("LOCAL_ONLY", "Local Only"),
                    ("REMOTE_ONLY", "Remote Only"),
                    ("MODIFIED", "Modified"),
                    ("PENDING_PUSH", "Pending Push"),
                ],
                default="NOT_SYNCED",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="glossaryterm",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.AlterField(
            model_name="glossaryterm",
            name="sync_status",
            field=models.CharField(
                choices=[
                    ("SYNCED", "Synced"),
                    ("LOCAL_ONLY", "Local Only"),
                    ("REMOTE_ONLY", "Remote Only"),
                    ("MODIFIED", "Modified"),
                    ("PENDING_PUSH", "Pending Push"),
                ],
                default="NOT_SYNCED",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="color",
            field=models.CharField(
                blank=True, default="#0d6efd", max_length=20, null=True
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="environment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="metadata_manager.environment",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="sync_status",
            field=models.CharField(
                choices=[
                    ("SYNCED", "Synced"),
                    ("LOCAL_ONLY", "Local Only"),
                    ("REMOTE_ONLY", "Remote Only"),
                    ("MODIFIED", "Modified"),
                    ("PENDING_PUSH", "Pending Push"),
                ],
                default="NOT_SYNCED",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="StructuredProperty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("deterministic_urn", models.CharField(max_length=255, unique=True)),
                ("original_urn", models.CharField(blank=True, max_length=255)),
                (
                    "datahub_id",
                    models.CharField(
                        blank=True, help_text="ID in DataHub", max_length=255, null=True
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("SYNCED", "Synced"),
                            ("LOCAL_ONLY", "Local Only"),
                            ("REMOTE_ONLY", "Remote Only"),
                            ("MODIFIED", "Modified"),
                            ("PENDING_PUSH", "Pending Push"),
                        ],
                        default="NOT_SYNCED",
                        max_length=20,
                    ),
                ),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("qualified_name", models.CharField(max_length=255, unique=True)),
                ("value_type", models.CharField(default="STRING", max_length=50)),
                ("cardinality", models.CharField(default="SINGLE", max_length=50)),
                ("immutable", models.BooleanField(default=False)),
                ("entity_types", models.JSONField(default=list)),
                (
                    "allowed_values",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("show_in_search_filters", models.BooleanField(default=True)),
                ("show_as_asset_badge", models.BooleanField(default=True)),
                ("show_in_asset_summary", models.BooleanField(default=True)),
                ("show_in_columns_table", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="metadata_manager.environment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Structured Property",
                "verbose_name_plural": "Structured Properties",
                "ordering": ["name"],
            },
        ),
    ]
