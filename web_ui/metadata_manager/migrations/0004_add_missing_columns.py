# Generated by Django 5.2.1 on 2025-05-20 11:14

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        (
            "metadata_manager",
            "0003_environment_alter_tag_options_domain_last_synced_and_more",
        ),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
            PRAGMA foreign_keys=off;
            
            -- Tag table
            CREATE TABLE IF NOT EXISTS "_metadata_manager_tag_new" (
                "id" char(32) NOT NULL PRIMARY KEY,
                "name" varchar(255) NOT NULL,
                "description" text NOT NULL,
                "deterministic_urn" varchar(255) NOT NULL UNIQUE,
                "created_at" datetime NOT NULL,
                "updated_at" datetime NOT NULL,
                "color" varchar(20) NOT NULL,
                "original_urn" varchar(255) NOT NULL,
                "environment_id" integer NULL REFERENCES "metadata_manager_environment" ("id"),
                "datahub_id" varchar(255) NULL,
                "sync_status" varchar(20) NOT NULL DEFAULT 'LOCAL_ONLY',
                "last_synced" datetime NULL,
                "staged_for_git" bool NOT NULL DEFAULT 0
            );
            
            INSERT INTO "_metadata_manager_tag_new" 
            SELECT 
                id, name, description, deterministic_urn, created_at, updated_at, 
                color, original_urn, environment_id,
                NULL as datahub_id, 'LOCAL_ONLY' as sync_status, NULL as last_synced, 0 as staged_for_git
            FROM 
                "metadata_manager_tag";
                
            DROP TABLE "metadata_manager_tag";
            ALTER TABLE "_metadata_manager_tag_new" RENAME TO "metadata_manager_tag";
            
            -- GlossaryNode table
            CREATE TABLE IF NOT EXISTS "_metadata_manager_glossarynode_new" (
                "id" char(32) NOT NULL PRIMARY KEY,
                "name" varchar(255) NOT NULL,
                "description" text NOT NULL,
                "deterministic_urn" varchar(255) NOT NULL UNIQUE,
                "created_at" datetime NOT NULL,
                "updated_at" datetime NOT NULL,
                "original_urn" varchar(255) NOT NULL,
                "parent_id" char(32) NULL REFERENCES "metadata_manager_glossarynode" ("id"),
                "environment_id" integer NULL REFERENCES "metadata_manager_environment" ("id"),
                "datahub_id" varchar(255) NULL,
                "sync_status" varchar(20) NOT NULL DEFAULT 'LOCAL_ONLY',
                "last_synced" datetime NULL,
                "staged_for_git" bool NOT NULL DEFAULT 0
            );
            
            INSERT INTO "_metadata_manager_glossarynode_new" 
            SELECT 
                id, name, description, deterministic_urn, created_at, updated_at, 
                original_urn, parent_id, environment_id,
                NULL as datahub_id, 'LOCAL_ONLY' as sync_status, NULL as last_synced, 0 as staged_for_git
            FROM 
                "metadata_manager_glossarynode";
                
            DROP TABLE "metadata_manager_glossarynode";
            ALTER TABLE "_metadata_manager_glossarynode_new" RENAME TO "metadata_manager_glossarynode";
            
            -- GlossaryTerm table
            CREATE TABLE IF NOT EXISTS "_metadata_manager_glossaryterm_new" (
                "id" char(32) NOT NULL PRIMARY KEY,
                "name" varchar(255) NOT NULL,
                "description" text NOT NULL,
                "deterministic_urn" varchar(255) NOT NULL UNIQUE,
                "created_at" datetime NOT NULL,
                "updated_at" datetime NOT NULL,
                "original_urn" varchar(255) NOT NULL,
                "term_source" varchar(255) NULL,
                "parent_node_id" char(32) NULL REFERENCES "metadata_manager_glossarynode" ("id"),
                "environment_id" integer NULL REFERENCES "metadata_manager_environment" ("id"),
                "datahub_id" varchar(255) NULL,
                "sync_status" varchar(20) NOT NULL DEFAULT 'LOCAL_ONLY',
                "last_synced" datetime NULL,
                "staged_for_git" bool NOT NULL DEFAULT 0
            );
            
            INSERT INTO "_metadata_manager_glossaryterm_new" 
            SELECT 
                id, name, description, deterministic_urn, created_at, updated_at, 
                original_urn, term_source, parent_node_id, environment_id,
                NULL as datahub_id, 'LOCAL_ONLY' as sync_status, NULL as last_synced, 0 as staged_for_git
            FROM 
                "metadata_manager_glossaryterm";
                
            DROP TABLE "metadata_manager_glossaryterm";
            ALTER TABLE "_metadata_manager_glossaryterm_new" RENAME TO "metadata_manager_glossaryterm";
            
            -- Domain table
            CREATE TABLE IF NOT EXISTS "_metadata_manager_domain_new" (
                "id" char(32) NOT NULL PRIMARY KEY,
                "name" varchar(255) NOT NULL,
                "description" text NOT NULL,
                "deterministic_urn" varchar(255) NOT NULL UNIQUE,
                "created_at" datetime NOT NULL,
                "updated_at" datetime NOT NULL,
                "original_urn" varchar(255) NOT NULL,
                "environment_id" integer NULL REFERENCES "metadata_manager_environment" ("id"),
                "datahub_id" varchar(255) NULL,
                "sync_status" varchar(20) NOT NULL DEFAULT 'LOCAL_ONLY',
                "last_synced" datetime NULL,
                "staged_for_git" bool NOT NULL DEFAULT 0
            );
            
            INSERT INTO "_metadata_manager_domain_new" 
            SELECT 
                id, name, description, deterministic_urn, created_at, updated_at, 
                original_urn, environment_id,
                NULL as datahub_id, 'LOCAL_ONLY' as sync_status, NULL as last_synced, 0 as staged_for_git
            FROM 
                "metadata_manager_domain";
                
            DROP TABLE "metadata_manager_domain";
            ALTER TABLE "_metadata_manager_domain_new" RENAME TO "metadata_manager_domain";
            
            PRAGMA foreign_keys=on;
            """,
            reverse_sql=""
        ),
    ]
