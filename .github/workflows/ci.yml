name: Validate Recipes

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'recipes/**/*.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'recipes/**/*.yml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate recipe templates
        run: |
          python scripts/validate_recipe.py --templates recipes/templates/*.yml

      - name: Validate recipe instances
        run: |
          python scripts/validate_recipe.py --instances recipes/instances/**/*.yml

  test-render:
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test rendering recipe instances
        run: |
          # Make test script executable
          chmod +x scripts/test_render_recipe.py
          
          # Test rendering each instance with its template
          for instance in recipes/instances/**/*.yml; do
            echo "Testing render for $instance"
            python scripts/test_render_recipe.py "$instance"
            if [ $? -ne 0 ]; then
              echo "Failed to render template for $instance"
              exit 1
            fi
          done

  test:
    runs-on: ubuntu-latest
    
    env:
      DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL || 'http://localhost:8080' }}
      DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN || '' }}
      TEST_SOURCE_ID: ${{ secrets.TEST_SOURCE_ID || 'analytics-database-prod' }}
      PYTEST_SKIP_NETWORK: ${{ secrets.PYTEST_SKIP_NETWORK || 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests
        run: |
          echo "Running Python unit tests..."
          python -m pytest -v test_recipe.py

      - name: Run integration tests (skipped in CI unless configured)
        if: env.PYTEST_SKIP_NETWORK != 'true'
        run: |
          echo "Running integration tests..."
          python -m pytest -v scripts/test_graph.py