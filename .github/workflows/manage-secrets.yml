name: Manage DataHub Secrets

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'list'
        type: choice
        options:
          - list
          - create
          - patch
          - delete
      environment:
        description: 'Environment to run against'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      secret_name:
        description: 'Secret name (for create, patch, or delete actions)'
        required: false
        type: string
      secret_value:
        description: 'Secret value (for create or patch actions)'
        required: false
        type: string

jobs:
  manage-secrets:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: List secrets
        if: ${{ github.event.inputs.action == 'list' }}
        run: python scripts/manage_secrets.py list
        env:
          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}
          DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN }}
          PYTHONPATH: ${{ github.workspace }}
      
      - name: Create secret
        if: ${{ github.event.inputs.action == 'create' && github.event.inputs.secret_name != '' && github.event.inputs.secret_value != '' }}
        run: python scripts/manage_secrets.py create --name "${{ github.event.inputs.secret_name }}" --value "${{ github.event.inputs.secret_value }}"
        env:
          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}
          DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN }}
          PYTHONPATH: ${{ github.workspace }}
      
      - name: Patch secret
        if: ${{ github.event.inputs.action == 'patch' && github.event.inputs.secret_name != '' && github.event.inputs.secret_value != '' }}
        run: python scripts/manage_secrets.py patch --name "${{ github.event.inputs.secret_name }}" --value "${{ github.event.inputs.secret_value }}"
        env:
          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}
          DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN }}
          PYTHONPATH: ${{ github.workspace }}
      
      - name: Delete secret
        if: ${{ github.event.inputs.action == 'delete' && github.event.inputs.secret_name != '' }}
        run: python scripts/manage_secrets.py delete --name "${{ github.event.inputs.secret_name }}"
        env:
          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}
          DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN }}
          PYTHONPATH: ${{ github.workspace }}
      
      - name: Error - missing parameters
        if: |
          (github.event.inputs.action == 'create' && (github.event.inputs.secret_name == '' || github.event.inputs.secret_value == '')) ||
          (github.event.inputs.action == 'patch' && (github.event.inputs.secret_name == '' || github.event.inputs.secret_value == '')) ||
          (github.event.inputs.action == 'delete' && github.event.inputs.secret_name == '')
        run: |
          echo "Error: Missing required parameters for the selected action."
          echo "For 'create' and 'patch' actions, both 'secret_name' and 'secret_value' are required."
          echo "For 'delete' action, 'secret_name' is required."
          exit 1 