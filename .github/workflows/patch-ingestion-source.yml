name: Patch DataHub Ingestion Source

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to use'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      source_id:
        description: 'ID of the ingestion source to patch'
        required: true
        type: string
      recipe_file:
        description: 'Path to recipe file (leave empty to keep existing recipe)'
        required: false
        type: string
      schedule:
        description: 'New schedule cron expression (leave empty to keep existing schedule)'
        required: false
        type: string
      timezone:
        description: 'New schedule timezone (leave empty to keep existing timezone)'
        required: false
        type: string
        default: 'UTC'

jobs:
  patch-ingestion-source:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Patch ingestion source
        run: |
          ARGS="--source-id ${{ inputs.source_id }}"
          
          if [ -n "${{ inputs.recipe_file }}" ]; then
            ARGS="$ARGS --recipe-file ${{ inputs.recipe_file }}"
          fi
          
          if [ -n "${{ inputs.schedule }}" ]; then
            ARGS="$ARGS --schedule ${{ inputs.schedule }}"
          fi
          
          if [ -n "${{ inputs.timezone }}" ]; then
            ARGS="$ARGS --timezone ${{ inputs.timezone }}"
          fi
          
          python scripts/patch_recipe.py $ARGS
        env:
          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}
          DATAHUB_TOKEN: ${{ secrets.DATAHUB_TOKEN }}
          PG_HOST_PORT: ${{ secrets.PG_HOST_PORT }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }} 